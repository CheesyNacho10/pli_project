(define (domain bloques)
  (:requirements :strips :typing)
  (:types bloque)
  (:predicates (on ?x - bloque ?y - bloque)
    (ontable ?x - bloque)
    (clear ?x - bloque) (handempty)
    (holding ?x - bloque))
  (:action pick-up
    :parameters (?x - bloque)
    :precondition (and (clear ?x) (ontable ?x) (handempty))
    :effect (and (not (ontable ?x)) (not (clear ?x))
                 (not (handempty)) (holding ?x))
  )
  (:action put-down
    :parameters (?x - bloque)
    :precondition (and (holding ?x) (not (handempty)))
    :effect (and (not (holding ?x)) (clear ?x)
                 (handempty) (ontable ?x))
  )
  (:action stack
    :parameters (?x - bloque ?y - bloque)
    :precondition (and (holding ?x) (clear ?y) (not (handempty)))
    :effect (and (not (holding ?x)) (not (clear ?y))
                 (clear ?x) (handempty) (on ?x ?y))
  )
  (:action unstack
    :parameters (?x - bloque ?y - bloque)
    :precondition (and (on ?x ?y) (clear ?x) (handempty))
    :effect (and (holding ?x) (clear ?y) (not (clear ?x))
                 (not (handempty)) (not (on ?x ?y)))
  )
)